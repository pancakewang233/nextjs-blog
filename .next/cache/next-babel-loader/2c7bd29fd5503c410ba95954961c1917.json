{"ast":null,"code":"import fs, { promises as fsPromise } from 'fs';\nimport path from \"path\";\nimport matter from 'gray-matter';\nconst markdownDir = path.join(process.cwd(), 'markdown');\nexport const getPosts = async () => {\n  const fileNames = await fsPromise.readdir(markdownDir);\n  const posts = fileNames.map(filename => {\n    const id = filename.replace(/\\.md$/g, '');\n    const fullPath = path.join(markdownDir, filename);\n    const text = fs.readFileSync(fullPath, 'utf-8');\n    const {\n      data: {\n        title,\n        date\n      },\n      content\n    } = matter(text);\n    return {\n      id,\n      title,\n      date,\n      content\n    };\n  });\n  return posts;\n};\nexport const getPost = async id => {\n  const fullPath = path.join(markdownDir, id + '.md');\n  const text = fs.readFileSync(fullPath, 'utf-8');\n  const {\n    data: {\n      title,\n      date\n    },\n    content\n  } = matter(text);\n  return JSON.parse(JSON.stringify({\n    id,\n    title,\n    date,\n    content\n  }));\n};\nexport const getPostIds = async () => {\n  const fileNames = await fsPromise.readdir(markdownDir);\n  return fileNames.map(fileName => fileName.replace(/\\.md$/g, ''));\n};","map":{"version":3,"sources":["D:/Pank/code/Pack/nextjs-blog/lib/posts.tsx"],"names":["fs","promises","fsPromise","path","matter","markdownDir","join","process","cwd","getPosts","fileNames","readdir","posts","map","filename","id","replace","fullPath","text","readFileSync","data","title","date","content","getPost","JSON","parse","stringify","getPostIds","fileName"],"mappings":"AAAA,OAAOA,EAAP,IAAYC,QAAQ,IAAIC,SAAxB,QAAwC,IAAxC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,MAAMC,WAAW,GAAGF,IAAI,CAACG,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,UAAzB,CAApB;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAAW;AAC/B,QAAMC,SAAS,GAAG,MAAMR,SAAS,CAACS,OAAV,CAAkBN,WAAlB,CAAxB;AACA,QAAMO,KAAK,GAAGF,SAAS,CAACG,GAAV,CAAcC,QAAQ,IAAG;AACnC,UAAMC,EAAE,GAAGD,QAAQ,CAACE,OAAT,CAAiB,QAAjB,EAA2B,EAA3B,CAAX;AACA,UAAMC,QAAQ,GAAGd,IAAI,CAACG,IAAL,CAAUD,WAAV,EAAuBS,QAAvB,CAAjB;AACA,UAAMI,IAAI,GAAGlB,EAAE,CAACmB,YAAH,CAAgBF,QAAhB,EAA0B,OAA1B,CAAb;AACA,UAAM;AAACG,MAAAA,IAAI,EAAC;AAACC,QAAAA,KAAD;AAAQC,QAAAA;AAAR,OAAN;AAAqBC,MAAAA;AAArB,QAAgCnB,MAAM,CAACc,IAAD,CAA5C;AACA,WAAO;AACHH,MAAAA,EADG;AACCM,MAAAA,KADD;AACQC,MAAAA,IADR;AACcC,MAAAA;AADd,KAAP;AAGH,GARa,CAAd;AASA,SAAOX,KAAP;AACH,CAZM;AAcP,OAAO,MAAMY,OAAO,GAAG,MAAMT,EAAN,IAAoB;AACvC,QAAME,QAAQ,GAAGd,IAAI,CAACG,IAAL,CAAUD,WAAV,EAAuBU,EAAE,GAAG,KAA5B,CAAjB;AACA,QAAMG,IAAI,GAAGlB,EAAE,CAACmB,YAAH,CAAgBF,QAAhB,EAA0B,OAA1B,CAAb;AACA,QAAM;AAACG,IAAAA,IAAI,EAAC;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAN;AAAqBC,IAAAA;AAArB,MAAgCnB,MAAM,CAACc,IAAD,CAA5C;AACA,SAAOO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe;AAC7BZ,IAAAA,EAD6B;AACzBM,IAAAA,KADyB;AAClBC,IAAAA,IADkB;AACZC,IAAAA;AADY,GAAf,CAAX,CAAP;AAGH,CAPM;AASP,OAAO,MAAMK,UAAU,GAAG,YAAU;AAChC,QAAMlB,SAAS,GAAG,MAAMR,SAAS,CAACS,OAAV,CAAkBN,WAAlB,CAAxB;AACA,SAAOK,SAAS,CAACG,GAAV,CAAcgB,QAAQ,IAAIA,QAAQ,CAACb,OAAT,CAAiB,QAAjB,EAA2B,EAA3B,CAA1B,CAAP;AACH,CAHM","sourcesContent":["import fs, {promises as fsPromise} from 'fs'\r\nimport path from \"path\";\r\nimport matter from 'gray-matter'\r\n\r\nconst markdownDir = path.join(process.cwd(), 'markdown')\r\n\r\nexport const getPosts = async() => {\r\n    const fileNames = await fsPromise.readdir(markdownDir)\r\n    const posts = fileNames.map(filename =>{\r\n        const id = filename.replace(/\\.md$/g, '')\r\n        const fullPath = path.join(markdownDir, filename)\r\n        const text = fs.readFileSync(fullPath, 'utf-8')\r\n        const {data:{title, date}, content} = matter(text)\r\n        return {\r\n            id, title, date, content\r\n        }\r\n    })\r\n    return posts;\r\n}\r\n\r\nexport const getPost = async(id: string) =>{\r\n    const fullPath = path.join(markdownDir, id + '.md')\r\n    const text = fs.readFileSync(fullPath, 'utf-8')\r\n    const {data:{title, date}, content} = matter(text)\r\n    return JSON.parse(JSON.stringify({\r\n        id, title, date, content\r\n    }))\r\n}\r\n\r\nexport const getPostIds = async() =>{\r\n    const fileNames = await fsPromise.readdir(markdownDir)\r\n    return fileNames.map(fileName => fileName.replace(/\\.md$/g, ''))\r\n}"]},"metadata":{},"sourceType":"module"}