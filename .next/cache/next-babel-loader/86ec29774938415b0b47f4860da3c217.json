{"ast":null,"code":"import { getDatabaseConnection } from '../../../lib/getDatabaseConnection';\nimport { User } from 'src/entity/User';\nimport md5 from 'md5';\n\nconst Sessions = async (req, res) => {\n  const {\n    username,\n    password\n  } = req.body;\n  const connection = await getDatabaseConnection();\n  const user = await connection.manager.findOne(User, {\n    where: {\n      username\n    }\n  });\n  res.setHeader('Content-Type', 'application/json;charset=utf-8');\n\n  if (user) {\n    const passwordDigest = md5(password);\n\n    if (user.passwordDigest === passwordDigest) {\n      res.statusCode = 200;\n      res.end(JSON.stringify(user));\n    } else {\n      res.statusCode = 422;\n      res.end(JSON.stringify({\n        password: ['密码不匹配']\n      }));\n    }\n  } else {\n    res.statusCode = 422;\n    res.end(JSON.stringify({\n      username: ['用户名不存在']\n    }));\n  }\n\n  res.statusCode = 200;\n  res.write('');\n  res.end();\n};\n\nexport default Sessions;","map":{"version":3,"sources":["D:/Pank/code/Pack/nextjs-blog/pages/api/v1/sessions.tsx"],"names":["getDatabaseConnection","User","md5","Sessions","req","res","username","password","body","connection","user","manager","findOne","where","setHeader","passwordDigest","statusCode","end","JSON","stringify","write"],"mappings":"AACA,SAAQA,qBAAR,QAAoC,oCAApC;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,OAAOC,GAAP,MAAgB,KAAhB;;AAEA,MAAMC,QAAwB,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACnD,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAuBH,GAAG,CAACI,IAAjC;AACA,QAAMC,UAAU,GAAG,MAAMT,qBAAqB,EAA9C;AACA,QAAMU,IAAI,GAAG,MAAMD,UAAU,CAACE,OAAX,CAAmBC,OAAnB,CAA2BX,IAA3B,EAAiC;AAACY,IAAAA,KAAK,EAAE;AAACP,MAAAA;AAAD;AAAR,GAAjC,CAAnB;AACAD,EAAAA,GAAG,CAACS,SAAJ,CAAc,cAAd,EAA8B,gCAA9B;;AACA,MAAIJ,IAAJ,EAAU;AACR,UAAMK,cAAc,GAAGb,GAAG,CAACK,QAAD,CAA1B;;AACA,QAAIG,IAAI,CAACK,cAAL,KAAwBA,cAA5B,EAA4C;AAC1CV,MAAAA,GAAG,CAACW,UAAJ,GAAiB,GAAjB;AACAX,MAAAA,GAAG,CAACY,GAAJ,CAAQC,IAAI,CAACC,SAAL,CAAeT,IAAf,CAAR;AACD,KAHD,MAGO;AACLL,MAAAA,GAAG,CAACW,UAAJ,GAAiB,GAAjB;AACAX,MAAAA,GAAG,CAACY,GAAJ,CAAQC,IAAI,CAACC,SAAL,CAAe;AAACZ,QAAAA,QAAQ,EAAE,CAAC,OAAD;AAAX,OAAf,CAAR;AACD;AACF,GATD,MASO;AACLF,IAAAA,GAAG,CAACW,UAAJ,GAAiB,GAAjB;AACAX,IAAAA,GAAG,CAACY,GAAJ,CAAQC,IAAI,CAACC,SAAL,CAAgB;AAACb,MAAAA,QAAQ,EAAE,CAAC,QAAD;AAAX,KAAhB,CAAR;AACD;;AAEDD,EAAAA,GAAG,CAACW,UAAJ,GAAiB,GAAjB;AACAX,EAAAA,GAAG,CAACe,KAAJ,CAAU,EAAV;AACAf,EAAAA,GAAG,CAACY,GAAJ;AACD,CAtBD;;AAwBA,eAAed,QAAf","sourcesContent":["import {NextApiHandler} from 'next';\r\nimport {getDatabaseConnection} from '../../../lib/getDatabaseConnection';\r\nimport {User} from 'src/entity/User';\r\nimport md5 from 'md5';\r\n\r\nconst Sessions: NextApiHandler = async (req, res) => {\r\n  const {username, password} = req.body;\r\n  const connection = await getDatabaseConnection();\r\n  const user = await connection.manager.findOne(User, {where: {username}});\r\n  res.setHeader('Content-Type', 'application/json;charset=utf-8');\r\n  if (user) {\r\n    const passwordDigest = md5(password);\r\n    if (user.passwordDigest === passwordDigest) {\r\n      res.statusCode = 200;\r\n      res.end(JSON.stringify(user));\r\n    } else {\r\n      res.statusCode = 422;\r\n      res.end(JSON.stringify({password: ['密码不匹配']}));\r\n    }\r\n  } else {\r\n    res.statusCode = 422;\r\n    res.end(JSON.stringify( {username: ['用户名不存在']}));\r\n  }\r\n\r\n  res.statusCode = 200;\r\n  res.write('');\r\n  res.end();\r\n};\r\n\r\nexport default Sessions;\r\n"]},"metadata":{},"sourceType":"module"}