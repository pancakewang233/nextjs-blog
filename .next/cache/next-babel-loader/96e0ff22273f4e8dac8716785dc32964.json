{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Pank\\\\code\\\\Pack\\\\nextjs-blog\\\\components\\\\Form.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nexport var Form = function Form(props) {\n  return __jsx(\"form\", {\n    onSubmit: props.onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, props.fields.map(function (field) {\n    var _field$errors;\n\n    return __jsx(\"div\", {\n      key: field.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, __jsx(\"label\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, field.label, field.type === 'textarea' ? __jsx(\"textarea\", {\n      onChange: field.onChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 42\n      }\n    }, field.value) : __jsx(\"input\", {\n      type: field.type,\n      value: field.value,\n      onChange: field.onChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    })), ((_field$errors = field.errors) === null || _field$errors === void 0 ? void 0 : _field$errors.length) > 0 && __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 40\n      }\n    }, field.errors.join(',')));\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, props.buttons));\n};\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["D:/Pank/code/Pack/nextjs-blog/components/Form.tsx"],"names":["React","Form","props","onSubmit","fields","map","field","label","type","onChange","value","errors","length","join","buttons"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAsE,OAAtE;AAcA,OAAO,IAAMC,IAAqB,GAAG,SAAxBA,IAAwB,CAACC,KAAD,EAAW;AAC9C,SACE;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,MAAN,CAAaC,GAAb,CAAiB,UAAAC,KAAK;AAAA;;AAAA,WACrB;AAAK,MAAA,GAAG,EAAEA,KAAK,CAACC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KAAK,CAACC,KADT,EAEGD,KAAK,CAACE,IAAN,KAAe,UAAf,GAA4B;AAAU,MAAA,QAAQ,EAAEF,KAAK,CAACG,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCH,KAAK,CAACI,KAA3C,CAA5B,GACC;AAAO,MAAA,IAAI,EAAEJ,KAAK,CAACE,IAAnB;AAAyB,MAAA,KAAK,EAAEF,KAAK,CAACI,KAAtC;AAA6C,MAAA,QAAQ,EAAEJ,KAAK,CAACG,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADF,EAMG,kBAAAH,KAAK,CAACK,MAAN,gEAAcC,MAAd,IAAuB,CAAvB,IAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAC1BN,KAAK,CAACK,MAAN,CAAaE,IAAb,CAAkB,GAAlB,CAD0B,CAN/B,CADqB;AAAA,GAAtB,CADH,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,KAAK,CAACY,OADT,CAbF,CADF;AAoBD,CArBM;KAAMb,I","sourcesContent":["import React, {ChangeEventHandler, FormEventHandler, ReactChild} from 'react';\r\n\r\ntype Props = {\r\n  onSubmit: FormEventHandler;\r\n  fields: {\r\n    label: string,\r\n    type: 'text' | 'password' | 'textarea',\r\n    value: string | number,\r\n    onChange: ChangeEventHandler<HTMLInputElement>,\r\n    errors: string[]\r\n  }[];\r\n  buttons: ReactChild;\r\n}\r\n\r\nexport const Form: React.FC<Props> = (props) => {\r\n  return (\r\n    <form onSubmit={props.onSubmit}>\r\n      {props.fields.map(field =>\r\n        <div key={field.label}>\r\n          <label>\r\n            {field.label}\r\n            {field.type === 'textarea' ? <textarea onChange={field.onChange}>{field.value}</textarea> :\r\n              <input type={field.type} value={field.value} onChange={field.onChange}/>}\r\n          </label>\r\n          {field.errors?.length > 0 && <div>\r\n            {field.errors.join(',')}\r\n          </div>}\r\n        </div>\r\n      )}\r\n      <div>\r\n        {props.buttons}\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"module"}