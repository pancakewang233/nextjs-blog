{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Pank\\\\code\\\\Pack\\\\nextjs-blog\\\\pages\\\\posts\\\\[id].tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\n\nvar postsShow = function postsShow(props) {\n  var post = props.post;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, post.title), __jsx(\"article\", {\n    dangerouslySetInnerHTML: {\n      __html: post.content\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport var __N_SSP = true;\nexport default postsShow;","map":{"version":3,"sources":["D:/Pank/code/Pack/nextjs-blog/pages/posts/[id].tsx"],"names":["React","postsShow","props","post","title","__html","content"],"mappings":";;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;AAOA,IAAMC,SAAyB,GAAG,SAA5BA,SAA4B,CAACC,KAAD,EAAW;AACzC,MAAOC,IAAP,GAAeD,KAAf,CAAOC,IAAP;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACC,KAAV,CADJ,EAEI;AAAS,IAAA,uBAAuB,EAAE;AAACC,MAAAA,MAAM,EAAEF,IAAI,CAACG;AAAd,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAOH,CATD;;;AAWA,eAAeL,SAAf","sourcesContent":["import { getPost, getPostIds } from 'lib/posts';\r\nimport {GetServerSideProps, NextPage} from 'next';\r\nimport React from 'react'\r\nimport {getDatabaseConnection} from '../../lib/getDatabaseConnection';\r\nimport {UAParser} from 'ua-parser-js';\r\n\r\ntype Props = {\r\n    post: Post\r\n}\r\nconst postsShow:NextPage<Props> = (props) => {\r\n    const {post} = props\r\n    return (\r\n        <div>\r\n            <h1>{post.title}</h1>\r\n            <article dangerouslySetInnerHTML={{__html: post.content}}>\r\n            </article>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default postsShow;\r\n\r\nexport const getServerSideProps: GetServerSideProps<any, { id: string }> = async (context) => {\r\n    const connection = await getDatabaseConnection();\r\n    const post = await connection.manager.findOne('Post',context.params.id)\r\n    return {\r\n        props: {\r\n            post: JSON.parse(JSON.stringify(post))\r\n        }\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}