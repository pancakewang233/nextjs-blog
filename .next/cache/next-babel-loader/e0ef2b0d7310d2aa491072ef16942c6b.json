{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { getDatabaseConnection } from '../../lib/getDatabaseConnection';\nimport { User } from '../entity/User';\nimport md5 from 'md5';\nexport class SignIn {\n  constructor() {\n    _defineProperty(this, \"username\", void 0);\n\n    _defineProperty(this, \"password\", void 0);\n\n    _defineProperty(this, \"user\", void 0);\n\n    _defineProperty(this, \"errors\", {\n      username: [],\n      password: []\n    });\n  }\n\n  async validate() {\n    if (this.username.trim() === '') {\n      this.errors.username.push('用户名不能为空');\n    }\n\n    const connection = await getDatabaseConnection();\n    const user = await connection.manager.findOne(User, {\n      where: {\n        username: this.username\n      }\n    });\n    this.user = user;\n    console.log('fuck', user.passwordDigest, 'in', this.password);\n\n    if (user) {\n      if (user.passwordDigest !== md5(this.password)) {\n        this.errors.password.push('密码与用户名不匹配');\n      }\n    } else {\n      this.errors.username.push('用户名不存在');\n    }\n  }\n\n  hasErrors() {\n    return !!Object.values(this.errors).find(v => v.length > 0);\n  }\n\n}","map":{"version":3,"sources":["D:/Pank/code/Pack/nextjs-blog/src/model/SignIn.ts"],"names":["getDatabaseConnection","User","md5","SignIn","username","password","validate","trim","errors","push","connection","user","manager","findOne","where","console","log","passwordDigest","hasErrors","Object","values","find","v","length"],"mappings":";;AAAA,SAAQA,qBAAR,QAAoC,iCAApC;AACA,SAAQC,IAAR,QAAmB,gBAAnB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AAEA,OAAO,MAAMC,MAAN,CAAa;AAAA;AAAA;;AAAA;;AAAA;;AAAA,oCAIT;AAACC,MAAAA,QAAQ,EAAE,EAAX;AAA2BC,MAAAA,QAAQ,EAAE;AAArC,KAJS;AAAA;;AAMJ,QAARC,QAAQ,GAAG;AACf,QAAI,KAAKF,QAAL,CAAcG,IAAd,OAAyB,EAA7B,EAAiC;AAC/B,WAAKC,MAAL,CAAYJ,QAAZ,CAAqBK,IAArB,CAA0B,SAA1B;AACD;;AACD,UAAMC,UAAU,GAAG,MAAMV,qBAAqB,EAA9C;AACA,UAAMW,IAAI,GAAG,MAAMD,UAAU,CAACE,OAAX,CAAmBC,OAAnB,CAA2BZ,IAA3B,EAAiC;AAACa,MAAAA,KAAK,EAAE;AAACV,QAAAA,QAAQ,EAAE,KAAKA;AAAhB;AAAR,KAAjC,CAAnB;AACA,SAAKO,IAAL,GAAYA,IAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBL,IAAI,CAACM,cAAzB,EAAwC,IAAxC,EAA8C,KAAKZ,QAAnD;;AACA,QAAIM,IAAJ,EAAU;AACR,UAAIA,IAAI,CAACM,cAAL,KAAwBf,GAAG,CAAC,KAAKG,QAAN,CAA/B,EAAgD;AAC9C,aAAKG,MAAL,CAAYH,QAAZ,CAAqBI,IAArB,CAA0B,WAA1B;AACD;AACF,KAJD,MAIO;AACL,WAAKD,MAAL,CAAYJ,QAAZ,CAAqBK,IAArB,CAA0B,QAA1B;AACD;AACF;;AAEDS,EAAAA,SAAS,GAAG;AACV,WAAO,CAAC,CAACC,MAAM,CAACC,MAAP,CAAc,KAAKZ,MAAnB,EAA2Ba,IAA3B,CAAgCC,CAAC,IAAIA,CAAC,CAACC,MAAF,GAAW,CAAhD,CAAT;AACD;;AAzBiB","sourcesContent":["import {getDatabaseConnection} from '../../lib/getDatabaseConnection';\r\nimport {User} from '../entity/User';\r\nimport md5 from 'md5';\r\n\r\nexport class SignIn {\r\n  username: string;\r\n  password: string;\r\n  user: User;\r\n  errors = {username: [] as string[], password: [] as string[]};\r\n\r\n  async validate() {\r\n    if (this.username.trim() === '') {\r\n      this.errors.username.push('用户名不能为空');\r\n    }\r\n    const connection = await getDatabaseConnection();\r\n    const user = await connection.manager.findOne(User, {where: {username: this.username}});\r\n    this.user = user\r\n    console.log('fuck', user.passwordDigest,'in', this.password)\r\n    if (user) {\r\n      if (user.passwordDigest !== md5(this.password)) {\r\n        this.errors.password.push('密码与用户名不匹配');\r\n      }\r\n    } else {\r\n      this.errors.username.push('用户名不存在');\r\n    }\r\n  }\r\n\r\n  hasErrors() {\r\n    return !!Object.values(this.errors).find(v => v.length > 0);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}