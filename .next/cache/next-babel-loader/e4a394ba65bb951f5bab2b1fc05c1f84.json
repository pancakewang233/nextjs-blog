{"ast":null,"code":"import { SignIn } from '../../../src/model/SignIn';\nimport { withSession } from 'lib/withSession';\n\nconst Sessions = async (req, res) => {\n  const {\n    username,\n    password\n  } = req.body;\n  console.log('fuck', req);\n  res.setHeader('Content-Type', 'application/json;charset=utf-8');\n  const signIn = new SignIn();\n  signIn.username = username;\n  signIn.password = password;\n  await signIn.validate();\n\n  if (signIn.hasErrors()) {\n    res.statusCode = 422;\n    res.end(JSON.stringify(signIn.errors));\n  } else {\n    req.session.set('currentUser', signIn.user);\n    await req.session.save();\n    res.statusCode = 200;\n    res.end(JSON.stringify(signIn.user));\n  }\n};\n\nexport default withSession(Sessions);","map":{"version":3,"sources":["D:/Pank/code/Pack/nextjs-blog/pages/api/v1/sessions.tsx"],"names":["SignIn","withSession","Sessions","req","res","username","password","body","console","log","setHeader","signIn","validate","hasErrors","statusCode","end","JSON","stringify","errors","session","set","user","save"],"mappings":"AAIA,SAAQA,MAAR,QAAqB,2BAArB;AACA,SAASC,WAAT,QAA4B,iBAA5B;;AAEA,MAAMC,QAAwB,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACnD,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAuBH,GAAG,CAACI,IAAjC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBN,GAApB;AACAC,EAAAA,GAAG,CAACM,SAAJ,CAAc,cAAd,EAA8B,gCAA9B;AACA,QAAMC,MAAM,GAAG,IAAIX,MAAJ,EAAf;AACAW,EAAAA,MAAM,CAACN,QAAP,GAAkBA,QAAlB;AACAM,EAAAA,MAAM,CAACL,QAAP,GAAkBA,QAAlB;AACA,QAAMK,MAAM,CAACC,QAAP,EAAN;;AAEA,MAAGD,MAAM,CAACE,SAAP,EAAH,EAAsB;AACpBT,IAAAA,GAAG,CAACU,UAAJ,GAAiB,GAAjB;AACAV,IAAAA,GAAG,CAACW,GAAJ,CAAQC,IAAI,CAACC,SAAL,CAAeN,MAAM,CAACO,MAAtB,CAAR;AACD,GAHD,MAGK;AACHf,IAAAA,GAAG,CAACgB,OAAJ,CAAYC,GAAZ,CAAgB,aAAhB,EAA+BT,MAAM,CAACU,IAAtC;AACA,UAAMlB,GAAG,CAACgB,OAAJ,CAAYG,IAAZ,EAAN;AACAlB,IAAAA,GAAG,CAACU,UAAJ,GAAiB,GAAjB;AACAV,IAAAA,GAAG,CAACW,GAAJ,CAAQC,IAAI,CAACC,SAAL,CAAeN,MAAM,CAACU,IAAtB,CAAR;AACD;AACF,CAlBD;;AAoBA,eAAepB,WAAW,CAACC,QAAD,CAA1B","sourcesContent":["import {NextApiHandler} from 'next';\r\nimport {getDatabaseConnection} from '../../../lib/getDatabaseConnection';\r\nimport {User} from 'src/entity/User';\r\nimport md5 from 'md5';\r\nimport {SignIn} from '../../../src/model/SignIn';\r\nimport { withSession } from 'lib/withSession';\r\n\r\nconst Sessions: NextApiHandler = async (req, res) => {\r\n  const {username, password} = req.body;\r\n  console.log('fuck', req)\r\n  res.setHeader('Content-Type', 'application/json;charset=utf-8');\r\n  const signIn = new SignIn()\r\n  signIn.username = username\r\n  signIn.password = password\r\n  await signIn.validate()\r\n\r\n  if(signIn.hasErrors()){\r\n    res.statusCode = 422;\r\n    res.end(JSON.stringify(signIn.errors));\r\n  }else{\r\n    req.session.set('currentUser', signIn.user)\r\n    await req.session.save()\r\n    res.statusCode = 200;\r\n    res.end(JSON.stringify(signIn.user));\r\n  }\r\n};\r\n\r\nexport default withSession(Sessions);\r\n"]},"metadata":{},"sourceType":"module"}